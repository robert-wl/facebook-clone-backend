
directive @auth on INPUT_FIELD_DEFINITION | FIELD_DEFINITION

scalar Time

type User {
    id: ID!
    firstName: String!
    lastName: String!
    username: String!
    email: String!
    dob: Time!
    gender: String!
    active: Boolean!
    profile: String
    background: String
    createdAt: Time!
    posts: [Post]
    friendCount: Int! @goField(forceResolver: true)
    mutualCount: Int! @goField(forceResolver: true)
    friended: String! @goField(forceResolver: true)
}

input NewUser {
    firstName: String!
    lastName: String!
    username: String!
    email: String!
    password: String!
    dob: Time!
    gender: String!
}

input UpdateUser {
    firstName: String!
    lastName: String!
    password: String!
    gender: String!
}

type Query {
    getUser(username: String!): User @auth
    getUsers: [User]
    checkActivateLink(id: String!): Boolean!
    checkResetLink(id: String!): Boolean!
    getAuth: User! @auth
    #getInactiveUsers: [InactiveUser]
}

type Mutation {
    createUser(input: NewUser!): User!
    activateUser(id: String!): User!
    authenticateUser(email: String!, password: String!): String!
    forgotPassword(email: String!): Boolean!
    resetPassword(id: String!, password: String!): User!
    updateUserProfile(profile: String!): User! @auth
    updateUserBackground(background: String!): User! @auth
    updateUser(input: UpdateUser!): User! @auth
    #updateUser(id: ID!, input: NewUser!): User
    #deleteUser(id: ID!): User
}