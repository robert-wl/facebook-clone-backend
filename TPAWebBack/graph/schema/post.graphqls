

type Post {
    id: ID!
    user: User!
    content: String!
    privacy: String!
    likeCount: Int!
    commentCount: Int!
    shareCount: Int!
    files: [String]
    likes: [PostLike]
    comments: [Comment]
    createdAt: Time!
}

type PostLike {
    postId: ID!
    user: User!
}

type Comment {
    id: ID!
    user: User!
    content: String!
    likeCount: Int!
    replyCount: Int!
    parentPost: Post
    parentComment: Comment
    likes: [CommentLike]
    comments: [Comment]
    createdAt: Time!
}

type CommentLike {
    commentId: ID!
    user: User!
}

input NewPost {
    content: String!
    privacy: String!
    files: [String]
}

extend type Query {
    getPost(id: ID!): Post
    getPosts: [Post]
}

extend type Mutation {
    createPost(newPost: NewPost): Post @auth
}