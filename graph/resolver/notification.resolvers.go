package resolver

// This file will be automatically regenerated based on the schema, any resolver implementations
// will be copied through when generating and any unknown code will be moved to the end.
// Code generated by github.com/99designs/gqlgen version v0.17.49

import (
	"context"
	"github.com/yahkerobertkertasnya/facebook-clone-backend/graph/model"
)

// CreateNotification is the resolver for the createNotification field.
func (r *mutationResolver) CreateNotification(ctx context.Context, notification model.NewNotification) (*model.Notification, error) {
	userID := ctx.Value("UserID").(string)

	return r.NotificationService.CreateNotification(userID, notification)
}

// GetUnreadNotifications is the resolver for the getUnreadNotifications field.
func (r *mutationResolver) GetUnreadNotifications(ctx context.Context) ([]*model.Notification, error) {
	userID := ctx.Value("UserID").(string)

	return r.NotificationService.GetUnreadNotifications(userID)
}

// BlockUser is the resolver for the blockUser field.
func (r *mutationResolver) BlockUser(ctx context.Context, username string) (*model.BlockNotification, error) {
	userID := ctx.Value("UserID").(string)

	return r.NotificationService.BlockUser(userID, username)
}

// GetNotifications is the resolver for the getNotifications field.
func (r *queryResolver) GetNotifications(ctx context.Context) ([]*model.Notification, error) {
	userID := ctx.Value("UserID").(string)

	return r.NotificationService.GetNotifications(userID)
}
